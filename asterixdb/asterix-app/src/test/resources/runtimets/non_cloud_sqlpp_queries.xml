<!--
 ! Licensed to the Apache Software Foundation (ASF) under one
 ! or more contributor license agreements.  See the NOTICE file
 ! distributed with this work for additional information
 ! regarding copyright ownership.  The ASF licenses this file
 ! to you under the Apache License, Version 2.0 (the
 ! "License"); you may not use this file except in compliance
 ! with the License.  You may obtain a copy of the License at
 !
 !   http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing,
 ! software distributed under the License is distributed on an
 ! "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ! KIND, either express or implied.  See the License for the
 ! specific language governing permissions and limitations
 ! under the License.
 !-->
<test-suite xmlns="urn:xml.testframework.asterix.apache.org" ResultOffsetPath="results" QueryOffsetPath="queries_sqlpp"
            QueryFileExtension=".sqlpp">
  <test-group name="sqlpp_queries">
    <test-group name="storage-size">
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="collection-exists">
          <output-dir compare="Clean-JSON">collection-exists</output-dir>
          <source-location>false</source-location>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="non-constant-argument">
          <output-dir compare="Clean-JSON">non-constant-argument</output-dir>
          <source-location>false</source-location>
          <expected-error>Compilation error: Function asterix.storage-size expects constant arguments while arg[0] is of type VARIABLE</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="collection-does-not-exist">
          <output-dir compare="Clean-JSON">collection-does-not-exist</output-dir>
          <source-location>false</source-location>
          <expected-error>Cannot find dataset with name doesNotExistCollection in dataverse testScope</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="non-string-argument">
          <output-dir compare="Clean-JSON">non-string-argument</output-dir>
          <source-location>false</source-location>
          <expected-error>Type mismatch: function storage-size expects its 1st input parameter to be of type string, but the actual input type is bigint</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="view-not-collection">
          <output-dir compare="Clean-JSON">view-not-collection</output-dir>
          <source-location>false</source-location>
          <expected-error>Cannot find dataset with name testCollection_vw in dataverse testScope</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="external-collection">
          <output-dir compare="Clean-JSON">external-collection</output-dir>
          <source-location>false</source-location>
          <expected-error>Retrieving storage size is not applicable to type: EXTERNAL.</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="index-exists">
          <output-dir compare="Clean-JSON">index-exists</output-dir>
          <source-location>false</source-location>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="index-does-not-exist">
          <output-dir compare="Clean-JSON">index-does-not-exist</output-dir>
          <source-location>false</source-location>
          <expected-error>Cannot find index with name testCollection_idx_fake</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="invalid-arguments-count">
          <output-dir compare="Clean-JSON">invalid-arguments-count</output-dir>
          <source-location>false</source-location>
          <expected-error>Invalid number of arguments for function storage-size</expected-error>
          <expected-error>Invalid number of arguments for function storage-size</expected-error>
        </compilation-unit>
      </test-case>
      <test-case FilePath="storage-size/datasource-function">
        <compilation-unit name="sanity">
          <output-dir compare="Clean-JSON">sanity</output-dir>
          <source-location>false</source-location>
        </compilation-unit>
      </test-case>
    </test-group>
  </test-group>
</test-suite>
